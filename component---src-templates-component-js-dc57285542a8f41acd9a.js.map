{"version":3,"sources":["webpack:///./src/components/preview.js","webpack:///./src/components/usage.js","webpack:///./src/components/missing-resource-message.js","webpack:///./src/components/api/tab-twig.js","webpack:///./src/components/api/tab-sass.js","webpack:///./src/components/api/tab-typescript.js","webpack:///./src/components/api/tabs.js","webpack:///./src/templates/component.js"],"names":["state","isModalVisible","toggleModal","_this","setState","render","children","this","props","react_default","a","createElement","Fragment","className","onClick","React","Component","usage","_ref","component","modifiers","getDefault","defines","exists","name","type","moduleName","length","map","modifier","join","define","contract","trim","split","twigIncludeTemplate","module","missing_resource_message","resource","tab_twig","api","declaration","blocks","block","tab_sass","variables","variable","value","mixins","mixin","arguments","argument","isPublic","method","visibility","tab_typescript","classes","singleClass","tags","tag","description","methods","filter","parameters","parameter","isOptional","returnType","API","TWIG","SASS","TYPESCRIPT","activeTab","showTab","currentTabLabel","tab","currentTab","_this$props$api","twig","sass","typescript","class","query","__webpack_exports__","readme","data","sprykerComponent","preview_default","href","namespace","dangerouslySetInnerHTML","__html","tabs_default"],"mappings":"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","file":"component---src-templates-component-js-dc57285542a8f41acd9a.js","sourcesContent":["import React from 'react';\n\nexport default class extends React.Component {\n    state = {\n        isModalVisible: false\n    }\n\n    toggleModal = () => {\n        this.setState(state => ({\n            isModalVisible: !state.isModalVisible\n        }))\n    }\n\n    render() {\n        const { children } = this.props;\n        const { isModalVisible } = this.state;\n\n        return (\n            <>\n                <button\n                    className=\"button is-primary is-pulled-right\"\n                    onClick={this.toggleModal}>\n                    Show preview\n                </button>\n\n                <section className={'modal' + (isModalVisible ? ' is-active' : '')}>\n                    <div className=\"modal-background\"></div>\n                    <div className=\"modal-card\">\n                        <header className=\"modal-card-head\">\n                            <p className=\"modal-card-title\">Preview</p>\n                            <button className=\"delete\" onClick={this.toggleModal}></button>\n                        </header>\n                        <section className=\"modal-card-body\">\n                            {children}\n                        </section>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport { exists, getDefault } from '../helpers/object';\n\n// please do not touch this...\nconst twigIncludeTemplate = (name, type, moduleName, modifiers, defines) => ''\n+ `{% include ${type}('${name}'${moduleName === 'ShopUi' ? '' : ', \\'' + moduleName + '\\''}) with {\\n`\n+ `${modifiers.length > 0 ? `    modifiers: ['${modifiers.map(modifier => modifier.name).join('\\', \\'')}']` : ''}`\n+ `${defines.length > 0 ? `${modifiers.length > 0 ? ',\\n' : ''}${defines.map(define => `    ${define.name}: {\\n        ${define.contract.trim().split('\\n').join('\\n    ')}`).join('\\n    },\\n')}\\n    }` : ''}`\n+ `\\n} only %}`;\n\nexport default ({ component }) => {\n    const modifiers = getDefault(component, [], 'api.sass.modifiers');\n    const defines = getDefault(component, [], 'api.twig.defines');\n\n    return exists(component, 'api.twig') && (\n        <>\n            <h3 className=\"title is-size-4\">Usage</h3>\n            <pre>\n                <code>{twigIncludeTemplate(component.name, component.type, component.module.name, modifiers, defines)}</code>\n            </pre>\n        </>\n    )\n}\n","import React from 'react';\nimport { exists } from '../helpers/object';\n\nexport default ({ resource, type, children }) => !exists(resource) && (\n    <div className={`message is-${type || 'info'}`}>\n        <div className=\"message-body\">{children}</div>\n    </div>\n)\n","import React from 'react';\nimport { exists } from '../../helpers/object';\n\nexport default ({ api }) => exists(api) && (\n    <div className='content'>\n        {exists(api, 'defines') && (\n            <>\n                <h6>Defines</h6>\n                {api.defines.map(define => (\n                    <pre>\n                        <code>\n                            {define.declaration}\n                        </code>\n                    </pre>\n                ))}\n            </>\n        )}\n\n        {exists(api, 'blocks') && (\n            <>\n                <h6>Blocks</h6>\n                <ul>\n                    {api.blocks.map(block => (\n                        <li>{block.name}</li>\n                    ))}\n                </ul>\n            </>\n        )}\n    </div>\n)\n","import React from 'react';\nimport MissingResourceMessage from '../missing-resource-message';\nimport { exists } from '../../helpers/object';\n\nexport default ({ api }) => exists(api) && (\n    <div className='content'>\n        {exists(api, 'variables') && (\n            <>\n                <h6>Variables</h6>\n                <ul>\n                    {api.variables.map(variable => (\n                        <li>\n                            <code>${variable.name}: {variable.value}</code>\n                        </li>\n                    ))}\n                </ul>\n            </>\n        )}\n\n        {exists(api, 'mixins') && (\n            <>\n                <h6>Mixins</h6>\n                <ul>\n                    {api.mixins.map(mixin => (\n                        <li>\n                            <code>{mixin.name}(\n                                    {exists(mixin, 'arguments') &&\n                                    mixin.arguments.map(argument => `$${argument.name}${argument.value ? ': ' + argument.value : ''}`)\n                                }\n                                )</code>\n                        </li>\n                    ))}\n                </ul>\n            </>\n        )}\n\n        {exists(api, 'modifiers') && (\n            <>\n                <h6>Modifiers</h6>\n                <ul>\n                    {api.modifiers.map(modifier => (\n                        <li>{modifier.name}</li>\n                    ))}\n                </ul>\n            </>\n        )}\n    </div>\n)\n","import React from 'react';\nimport { exists } from '../../helpers/object';\n\nconst isPublic = (method) => method.visibility === 'public';\n\nexport default ({ api }) => exists(api) && exists(api, 'classes') && (\n    <div className='content'>\n        {api.classes.map(singleClass => (\n            <>\n                {exists(singleClass, 'tags') && (\n                    <>\n                        <h6>Tags</h6>\n                        <ul>\n                            {singleClass.tags.map(tag => (\n                                <li>\n                                    <strong>{tag.name}</strong>\n                                    <br />\n                                    {tag.description}\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                )}\n\n                {exists(singleClass, 'methods') && (\n                    <>\n                        <h6>Methods</h6>\n                        <ul>\n                            {singleClass.methods.filter(isPublic).map(method => (\n                                <li>\n                                    <code>{method.visibility} {method.name}(\n                                        {exists(method, 'parameters') && method.parameters.map(\n                                            parameter => `${parameter.name}${parameter.isOptional ? '?' : ''}: ${parameter.type}`\n                                        ).join(', ')}\n                                    ): {method.returnType}</code>\n                                    <br />\n                                    <p>{method.description}</p>\n\n                                    {exists(method, 'parameters') && (\n                                        <>\n                                            <h6>Parameters</h6>\n                                            <ul>\n                                                {method.parameters.map(parameter => (\n                                                    <li>\n                                                        <code>\n                                                            {parameter.isOptional ? '[' : ''}\n                                                            {parameter.name}\n                                                            {parameter.isOptional ? ']' : ''}\n                                                            {` {${parameter.type}}`}\n                                                        </code>\n                                                        &nbsp;{parameter.description}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </>\n                                    )}\n\n                                    {exists(method, 'tags') && (\n                                        <>\n                                            <h6>Tags</h6>\n                                            <ul>\n                                                {method.tags.map(tag => (\n                                                    <li>\n                                                        <strong>{tag.name}</strong> {tag.description}\n                                                    </li>\n                                                ))}\n                                            </ul>\n                                        </>\n                                    )}\n                                </li>\n                            ))}\n                        </ul>\n                    </>\n                )}\n            </>\n        ))}\n    </div>\n)\n","import React from 'react';\nimport MissingResourceMessage from '../missing-resource-message';\nimport TwigTab from './tab-twig';\nimport SassTab from './tab-sass';\nimport TypescriptTab from './tab-typescript';\n\nconst API = {\n    TWIG: 'twig',\n    SASS: 'sass',\n    TYPESCRIPT: 'typescript'\n}\n\nexport default class extends React.Component {\n    state = {\n        activeTab: API.TWIG\n    }\n\n    showTab = (activeTab) => () => {\n        this.setState(state => ({\n            activeTab\n        }))\n    }\n\n    currentTabLabel = (tab) => {\n        if (this.state.activeTab === tab) {\n            return 'is-active';\n        }\n\n        return '';\n    }\n\n    currentTab = (tab) => {\n        if (this.state.activeTab === tab) {\n            return '';\n        }\n\n        return 'is-hidden';\n    }\n\n    render() {\n        const { twig, sass, typescript } = this.props.api;\n\n        return (\n            <section>\n                <h3 class=\"title is-size-4\">Component API</h3>\n\n                <div className=\"tabs\">\n                    <ul>\n                        <li className={this.currentTabLabel(API.TWIG)} onClick={this.showTab(API.TWIG)}><a>Twig</a></li>\n                        <li className={this.currentTabLabel(API.SASS)} onClick={this.showTab(API.SASS)}><a>Sass</a></li>\n                        <li className={this.currentTabLabel(API.TYPESCRIPT)} onClick={this.showTab(API.TYPESCRIPT)}><a>Typescript</a></li>\n                    </ul>\n                </div>\n\n                <div className={this.currentTab(API.TWIG)}>\n                    <MissingResourceMessage resource={twig}>\n                        There are no {API.TWIG} API for this component.\n                    </MissingResourceMessage>\n                    <TwigTab api={twig} />\n                </div>\n\n                <div className={this.currentTab(API.SASS)}>\n                    <MissingResourceMessage resource={sass}>\n                        There are no {API.SASS} API for this component.\n                    </MissingResourceMessage>\n                    <SassTab api={sass} />\n                </div>\n\n                <div className={this.currentTab(API.TYPESCRIPT)}>\n                    <MissingResourceMessage resource={typescript}>\n                        There are no {API.TYPESCRIPT} API for this component.\n                    </MissingResourceMessage>\n                    <TypescriptTab api={typescript} />\n                </div>\n            </section>\n        )\n    }\n}\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Preview from '../components/preview';\nimport Usage from '../components/usage';\nimport Tabs from '../components/api/tabs';\nimport { exists } from '../helpers/object';\n\nexport const query = graphql`\n    query SiteComponentPage($slug: String!) {\n        sprykerComponent(slug: { eq: $slug }) {\n            name\n            type\n            module {\n                namespace\n                name\n                path\n            }\n            readme\n            api {\n                twig {\n                    defines {\n                        name\n                        contract\n                        declaration\n                    }\n                    blocks {\n                        name\n                    }\n                }\n                sass {\n                    variables {\n                        name\n                        value\n                    }\n                    mixins {\n                        name\n                        arguments {\n                            name\n                            value\n                        }\n                        hasContent\n                    }\n                    modifiers {\n                        name\n                    }\n                }\n                typescript {\n                    classes {\n                        name\n                        tags {\n                            name\n                            description\n                        }\n                        methods {\n                            name\n                            description\n                            visibility\n                            returnType\n                            isAsync\n                            parameters {\n                                name\n                                type\n                                description\n                                isOptional\n                            }\n                            tags {\n                                name\n                                description\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n`\n\nconst getReadme = (name, readme) => {\n    return readme || `<h1>${name}</h1>This component has no description.`;\n}\n\nexport default ({ data }) => {\n    const component = data.sprykerComponent;\n\n    return exists(data, 'sprykerComponent') && (\n        <>\n            <section className=\"section\">\n                <Preview>\n                    No preview yet available.\n                </Preview>\n\n                <nav class=\"breadcrumb\">\n                    <ul>\n                        <li><a href=\"#\">{component.module.namespace}</a></li>\n                        <li><a href=\"#\">{component.module.name}</a></li>\n                    </ul>\n                </nav>\n\n                <h1 className=\"title is-size-2\">\n                    {component.name}\n                    &nbsp;\n                    <span class=\"tag is-danger is-rounded is-uppercase\">{component.type}</span>\n                </h1>\n\n                {exists(component, 'readme') && (\n                    <article\n                        className=\"content\"\n                        dangerouslySetInnerHTML={{ __html: getReadme(component.name, component.readme) }}>\n                    </article>\n                )}\n\n                <Usage component={component} />\n                <Tabs api={component.api} />\n            </section>\n        </>\n    )\n}\n"],"sourceRoot":""}